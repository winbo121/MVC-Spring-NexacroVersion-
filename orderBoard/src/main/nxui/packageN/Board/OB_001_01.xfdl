<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="OB_001_01" width="402" height="400" titletext="주문등록팝업" onload="OB_001_01_onload">
    <Layouts>
      <Layout height="400" width="402">
        <Static id="sta01_01" taborder="0" text="고객명" left="19" top="45" width="146" height="34" textAlign="center" font="14px/normal &quot;Gulim&quot;"/>
        <Edit id="edt_custNm" taborder="1" left="178" top="47" width="199" height="33" inputtype="normal"/>
        <Static id="sta01_01_00" taborder="2" text="휴대폰번호" left="19" top="86" width="146" height="34" textAlign="center" font="14px/normal &quot;Gulim&quot;"/>
        <Edit id="edt_phone" taborder="3" left="178" top="88" width="199" height="33" inputtype="number"/>
        <Edit id="edt_birBizNo" taborder="4" left="178" top="129" width="199" height="33" inputtype="number"/>
        <Static id="sta01_01_00_00" taborder="5" text="생년월일/사업자번호" left="19" top="127" width="146" height="34" textAlign="center" font="14px/normal &quot;Gulim&quot;"/>
        <Edit id="edt_addr" taborder="6" left="178" top="170" width="199" height="33" inputtype="normal"/>
        <Static id="sta01_01_00_00_00" taborder="7" text="주소" left="19" top="168" width="146" height="34" textAlign="center" font="14px/normal &quot;Gulim&quot;"/>
        <Combo id="cbo_custGbNm" taborder="8" text="" left="179" top="211" width="155" height="35" index="-1" innerdataset="ds_custGbCombo" codecolumn="CD_VAL1" datacolumn="CD_NM1" displaynulltext="선택" onitemchanged="cbo_custGbNm_onitemchanged"/>
        <Static id="sta01_00_00" taborder="9" left="44" top="209" width="96" height="34" textAlign="center" font="14px/normal &quot;Gulim&quot;" text="고객구분"/>
        <Static id="sta01_00_00_00" taborder="10" text="주문상품" left="44" top="254" width="96" height="34" textAlign="center" font="14px/normal &quot;Gulim&quot;"/>
        <Combo id="cbo_itemNm" taborder="11" text="" left="179" top="256" width="155" height="35" index="-1" innerdataset="ds_itemCombo" codecolumn="CD_VAL1" datacolumn="CD_NM1" displaynulltext="선택"/>
        <Button id="btn_regOrd" taborder="12" text="주문등록" left="55" top="314" width="133" height="56" visible="true" onclick="btn_regOrd_onclick"/>
        <Button id="btn_exit" taborder="13" text="닫기" left="212" top="314" width="133" height="56" visible="true" onclick="btn_exit_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
this.OB_001_01_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	//alert("onload 함수 실행");
	//주문 등록을 위해 고객구분, 주문상품 콤보박스 안의 데이터를 TB_CD_MST 테이블과 TB_ITEM 테이블에서 조회하여 값을 채워주자.
	// 1. 고객구분 콤보박스에 출력할 데이터들을 TB_CD_MST 테이블로부터 값을 조회해 오자.
	// 이 로직은 앞서 OB_001.xfdl onload에서 만든 경험이 있다. 이미 만들어둔 서버 로직 그대로 쓰면된다.
	// 우리는 단지 프론트 코딩을 통해 TB_CD_MST 테이블 SELECT 시 WHERE절에 필요한 값을 서버로 넘겨주면 된다.
	// 코딩을 하며 이해해보자.
	this.fn_setCustGbCbo();
	
	// 2. 주문상품 리스트를 TB_ITEM 테이블로부터 조회하여 콤보박스 안의 데이터를 채워주자.
	// 방법은 위 TB_CD_MST 테이블을 조회해 오는 방식과 유사하다.
	this.fn_setItemCbo();
};


this.btn_regOrd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//alert("주문 등록 버튼 클릭");
	//1. 주문등록을 위해 입력받은 6개의 값을 데이터셋에 담아 서버로 전송해야 한다.
	// 따라서, 데이터셋을 만들고 사용자가 입력한 6개의 값을 세팅한다.
	this.ds_regOrd.clearData();
	this.ds_regOrd.addRow();
	this.ds_regOrd.setColumn(0,"CUST_NM",this.edt_custNm.value);
	this.ds_regOrd.setColumn(0,"PHONE",this.edt_phone.value);
	this.ds_regOrd.setColumn(0,"BIR_BIZ_NO",this.edt_birBizNo.value);
	this.ds_regOrd.setColumn(0,"ADDR",this.edt_addr.value);
	this.ds_regOrd.setColumn(0,"CUST_GBCD",this.cbo_custGbNm.value); //combo에서 .value를 쓸경우 CODE를
	this.ds_regOrd.setColumn(0,"ITEM_CD",this.cbo_itemNm.value);     //combo에서 .name을 쓸 경우 DATA를 가져온다.
	
	trace(this.ds_regOrd.getColumn(0,"CUST_NM"));
	trace(this.ds_regOrd.getColumn(0,"PHONE"));
	trace(this.ds_regOrd.getColumn(0,"BIR_BIZ_NO"));
	trace(this.ds_regOrd.getColumn(0,"ADDR"));
	trace(this.ds_regOrd.getColumn(0,"CUST_GBCD"));
	trace(this.ds_regOrd.getColumn(0,"ITEM_CD"));
	
	//2. 세팅한 값을 서버로 전송한다.
	var strSvcId    = "insertOrdList";                  
	var strSvcUrl   = "insertOrdList.do";             
	var inData      = "ds_regOrd=ds_regOrd";  
	var outData     = "";// 서버로 부터 받을 값은 따로 없으니 생략하자.
	var strArg      = "";                               
	var callBackFnc = "fnCallback"; 
	
	this.gfnTransaction( strSvcId  , 	
						 strSvcUrl , 	
						 inData  , 		
						 outData , 		
						 strArg  , 		
						 callBackFnc); 	
};

this.btn_exit_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//alert("닫기 버튼 클릭");
	this.close();
};

/**************************************************************************************************
* 사용자 정의 함수
***************************************************************************************************/
this.fn_setCustGbCbo = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//trace("고객구분 콤보박스 세팅");
	//ds_searchCustGb 데이터셋을 생성하고 서버로 전달한 인자값을 추가해보자.
	this.ds_searchCustGb.clearData(); 
	this.ds_searchCustGb.addRow();   
	this.ds_searchCustGb.setColumn(0,"CD_VAL","002"); // 고객구분은 코드가 002이다.
	
	//서버로 데이터를 요청하는 부분이다.
	// 아래 부분은 OB_001.xfdl의 onload부분을 그대로 복사해서 가져온다.
	var strSvcId    = "selectCommonCode";               
	var strSvcUrl   = "selectCommonCode.do";             
	var inData      = "ds_search=ds_searchCustGb";   //ds_searchCombo ->  ds_searchCustGb 명칭변경
	var outData     = "ds_custGbCombo=ds_commonCode";  //ds_ordStatCombo -> ds_custGbCombo 명칭변경
	var strArg      = "";     
	var callBackFnc = "fnCallback"; 
	
	//넥사크로 N에서 제공하는 서버로 요청하는 공통함수를 쓴다.
	this.gfnTransaction( strSvcId  , 	
						 strSvcUrl , 	
						 inData  , 		
						 outData , 		
						 strArg  , 		
						 callBackFnc); 	// 세팅한 값을 담아 서버로 데이터 전송
	
};

this.fn_setItemCbo = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//trace("주문상품 콤보박스 세팅");
	//주문 상품의 경우 프론트에서 별도로 전송해줘야할 값이 없다.
	//서버에서 보내준 값만 받아서 주문상품 콤보박스에 바인딩만 해주면 된다.
	
	var strSvcId    = "selectItemList";               
	var strSvcUrl   = "selectItemList.do";             
	var inData      = "";   //따로 전송할 데이터가 없음
	var outData     = "ds_itemCombo=ds_itemCombo"; 
	var strArg      = "";     
	var callBackFnc = "fnCallback"; 
	
	//넥사크로 N에서 제공하는 서버로 요청하는 공통함수를 쓴다.
	this.gfnTransaction( strSvcId  , 	
						 strSvcUrl , 	
						 inData  , 		
						 outData , 		
						 strArg  , 		
						 callBackFnc); 	// 세팅한 값을 담아 서버로 데이터 전송
	
};



/**************************************************************************************************
* CallBack Function (서버수신)
***************************************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if(errorCode < 0){
		alert("작업 실패 에러 코드 : " + errorCode);
		return 0;
	}
	switch(svcID)
	{
		case "selectCommonCode":
			trace("고객구분 콤보박스 세팅 완료");
			break;
		case "selectItemList":
			trace("주문상품 콤보박스 세팅 완료");
			break;
		case "insertOrdList":
			alert("주문 등록 완료");
			this.close(); //팝업닫기
			break;
	}
};

this.cbo_custGbNm_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	
};
]]></Script>
    <Objects>
      <Dataset id="ds_searchCustGb">
        <ColumnInfo>
          <Column id="CD_VAL" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_custGbCombo">
        <ColumnInfo>
          <Column id="CD_VAL1" type="STRING" size="256"/>
          <Column id="CD_NM1" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_itemCombo">
        <ColumnInfo>
          <Column id="CD_VAL1" type="STRING" size="256"/>
          <Column id="CD_NM1" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_regOrd">
        <ColumnInfo>
          <Column id="CUST_NM" type="STRING" size="256"/>
          <Column id="PHONE" type="STRING" size="256"/>
          <Column id="BIR_BIZ_NO" type="STRING" size="256"/>
          <Column id="ADDR" type="STRING" size="256"/>
          <Column id="CUST_GBCD" type="STRING" size="256"/>
          <Column id="ITEM_CD" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
