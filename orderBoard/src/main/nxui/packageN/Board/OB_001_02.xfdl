<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="OB_001_01" width="402" height="210" titletext="주문수정팝업" onload="OB_001_01_onload">
    <Layouts>
      <Layout height="210" width="402">
        <Combo id="cbo_ordStatNm" taborder="0" text="" left="184" top="35" width="155" height="35" index="-1" innerdataset="ds_ordStatCombo" codecolumn="CD_VAL1" datacolumn="CD_NM1" displaynulltext="선택"/>
        <Static id="sta01_00_00" taborder="1" left="49" top="33" width="96" height="34" textAlign="center" font="14px/normal &quot;Gulim&quot;" text="주문상태"/>
        <Static id="sta01_00_00_00" taborder="2" text="주문상품" left="49" top="78" width="96" height="34" textAlign="center" font="14px/normal &quot;Gulim&quot;"/>
        <Combo id="cbo_itemNm" taborder="3" text="" left="184" top="80" width="155" height="35" index="-1" innerdataset="ds_itemCombo" codecolumn="CD_VAL1" datacolumn="CD_NM1" displaynulltext="선택"/>
        <Button id="btn_chgOrd" taborder="4" text="주문수정" left="60" top="138" width="133" height="56" visible="true" onclick="btn_chgOrd_onclick"/>
        <Button id="btn_exit" taborder="5" text="닫기" left="217" top="138" width="133" height="56" visible="true" onclick="btn_exit_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
this.OB_001_01_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	//alert(this.getOwnerFrame().ordNo);
	//주문 수정을 위한 주문상태, 주문상품 콤보박스 초기화
	//주문 등록에서 진행했던 작업과 동일하다.
	//콤보박스 초기화를 위해 2개의 사용자 정의 함수를 만들어보자.
	
	//1. 주문상태 콤보박스 초기화
	this.fn_setOrdStatCbo();
	
	// 2. 주문상품 콤보박스 초기화
	this.fn_setItemCbo();
};

this.btn_chgOrd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//alert("주문 수정 버튼 클릭");
	//1. 주문수정을 위해 입력받은 2개의 값을 데이터셋에 담아 서버로 전송해야 한다.
	// 따라서, 데이터셋을 만들고 사용자가 입력한 2개의 값을 세팅한다.
	this.ds_updOrd.clearData();
	this.ds_updOrd.addRow();
	this.ds_updOrd.setColumn(0,"ORD_STAT_CD",this.cbo_ordStatNm.value); //combo에서 .value를 쓸경우 CODE를
	this.ds_updOrd.setColumn(0,"ITEM_CD",this.cbo_itemNm.value);        //combo에서 .name을 쓸 경우 DATA를 가져온다.
	this.ds_updOrd.setColumn(0,"ORD_NO",this.getOwnerFrame().ordNo); 
	
	trace(this.ds_updOrd.getColumn(0,"ORD_STAT_CD"));
	trace(this.ds_updOrd.getColumn(0,"ITEM_CD"));
	trace(this.ds_updOrd.getColumn(0,"ORD_NO"));
	
	
	//2. 세팅한 값을 서버로 전송한다.
	var strSvcId    = "updateOrdList";                  
	var strSvcUrl   = "updateOrdList.do";             
	var inData      = "ds_updOrd=ds_updOrd";  
	var outData     = "";// 서버로 부터 받을 값은 따로 없으니 생략하자.
	var strArg      = "";                               
	var callBackFnc = "fnCallback"; 
	
	this.gfnTransaction( strSvcId  , 	
						 strSvcUrl , 	
						 inData  , 		
						 outData , 		
						 strArg  , 		
						 callBackFnc); 
};

this.btn_exit_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//alert("닫기 버튼 클릭");
	this.close();
};

/**************************************************************************************************
* 사용자 정의 함수
***************************************************************************************************/
this.fn_setOrdStatCbo = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//alert("주문상태 콤보박스 세팅");
	
	//ds_searchCombo 데이터셋을 생성하고 서버로 전달한 인자값을 추가해보자.
	this.ds_searchCombo.clearData(); // 데이터셋 초기화
	this.ds_searchCombo.addRow();    // 데이터셋에 값을 세팅하기 위해 1줄의 ROW를 추가
	this.ds_searchCombo.setColumn(0,"CD_VAL","001"); // 추가된 0번쨰 ROW의 CD_VAL 컬럼에 001이라는 값을 세팅한다.
	
	//서버로 데이터를 전송하기 전 필요한 값들을 세팅한다.
	var strSvcId    = "selectCommonCode";                
	var strSvcUrl   = "selectCommonCode.do";             
	var inData      = "ds_search=ds_searchCombo";        
	var outData     = "ds_ordStatCombo=ds_commonCode";  
	var strArg      = "";                               
	var callBackFnc = "fnCallback"; 
	
	this.gfnTransaction( strSvcId  , 	
						 strSvcUrl , 	
						 inData  , 		
						 outData , 		
						 strArg  , 		
						 callBackFnc); 	// 세팅한 값을 담아 서버로 데이터 전송
};

this.fn_setItemCbo = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//trace("주문상품 콤보박스 세팅");
	//주문 상품의 경우 프론트에서 별도로 전송해줘야할 값이 없다.
	//서버에서 보내준 값만 받아서 주문상품 콤보박스에 바인딩만 해주면 된다.
	
	var strSvcId    = "selectItemList";               
	var strSvcUrl   = "selectItemList.do";             
	var inData      = "";   //따로 전송할 데이터가 없음
	var outData     = "ds_itemCombo=ds_itemCombo"; 
	var strArg      = "";     
	var callBackFnc = "fnCallback"; 
	
	//넥사크로 N에서 제공하는 서버로 요청하는 공통함수를 쓴다.
	this.gfnTransaction( strSvcId  , 	
						 strSvcUrl , 	
						 inData  , 		
						 outData , 		
						 strArg  , 		
						 callBackFnc); 	// 세팅한 값을 담아 서버로 데이터 전송
	
};

/**************************************************************************************************
* CallBack Function (서버수신)
***************************************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if(errorCode < 0){
		alert("작업 실패 에러 코드 : " + errorCode);
		return 0;
	}
	switch(svcID)
	{
		case "selectCommonCode":
			trace("주문상태 콤보박스 세팅 완료");
			break;
		case "selectItemList":
			trace("주문상품 콤보박스 세팅 완료");
			break;
		case "updateOrdList":
			alert("주문 수정 완료");
			this.close(); //팝업닫기
			break;
	}
};]]></Script>
    <Objects>
      <Dataset id="ds_searchCombo">
        <ColumnInfo>
          <Column id="CD_VAL" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_ordStatCombo">
        <ColumnInfo>
          <Column id="CD_VAL1" type="STRING" size="256"/>
          <Column id="CD_NM1" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_itemCombo">
        <ColumnInfo>
          <Column id="CD_VAL1" type="STRING" size="256"/>
          <Column id="CD_NM1" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_updOrd">
        <ColumnInfo>
          <Column id="ORD_STAT_CD" type="STRING" size="256"/>
          <Column id="ITEM_CD" type="STRING" size="256"/>
          <Column id="ORD_NO" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
